{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Commands helper for the Moodle tiny_poodll plugin.\n *\n * @module      plugintype_pluginname/commands\n * @copyright   2023 Justin Hunt <justin@poodll.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {get_string as getString} from 'core/str';\nimport {\n    component,\n    recaudioButtonName,\n    recvideoButtonName,\n    recscreenButtonName,\n    widgetsButtonName,\n    recaudioMenuItemName,\n    recvideoMenuItemName,\n    recscreenMenuItemName,\n    widgetsMenuItemName\n} from './common';\nimport {isAllowed} from './options';\nimport rec_audio from './rec_audio';\n\n/**\n * Handle the action for your plugin.\n * @param {TinyMCE.editor} editor The tinyMCE editor instance.\n */\nconst handleAction = (editor) => {\n    // TODO Handle the action.\n    window.console.log(editor);\n};\n\n/**\n * Get the setup function for the buttons.\n *\n * This is performed in an async function which ultimately returns the registration function as the\n * Tiny.AddOnManager.Add() function does not support async functions.\n *\n * @returns {function} The registration function to call within the Plugin.add function.\n */\nexport const getSetup = async() => {\n    const [\n        recaudioButtonNameTitle,\n        recvideoButtonNameTitle,\n        recscreenButtonNameTitle,\n        widgetsButtonNameTitle,\n        recaudioMenuItemNameTitle,\n        recvideoMenuItemNameTitle,\n        recscreenMenuItemNameTitle,\n        widgetsMenuItemNameTitle,\n        audioIcon,\n        videoIcon,\n        screenIcon,\n        widgetsIcon,\n    ] = await Promise.all([\n        getString('button_recaudio', component),\n        getString('button_recvideo', component),\n        getString('button_recscreen', component),\n        getString('button_widgets', component),\n        getString('menuitem_recaudio', component),\n        getString('menuitem_recvideo', component),\n        getString('menuitem_recscreen', component),\n        getString('menuitem_widgets', component),\n        getButtonImage('audio', component),\n        getButtonImage('video', component),\n        getButtonImage('screen', component),\n        getButtonImage('widgets', component),\n    ]);\n\n    return (editor) => {\n        // Register the Moodle SVG as an icon suitable for use as a TinyMCE toolbar button.\n        editor.ui.registry.addIcon('audioicon', audioIcon.html);\n        editor.ui.registry.addIcon('videoicon', videoIcon.html);\n        editor.ui.registry.addIcon('screenicon', screenIcon.html);\n        editor.ui.registry.addIcon('widgetsicon', widgetsIcon.html);\n\n        // Register the recaudio Toolbar Button.\n        if(isAllowed(editor,'audio')) {\n            editor.ui.registry.addButton(recaudioButtonName, {\n                icon: 'audioicon',\n                tooltip: recaudioButtonNameTitle,\n                onAction: () => rec_audio.display(editor),\n            });\n\n            // Add the recaudio Menu Item.\n            // This allows it to be added to a standard menu, or a context menu.\n            editor.ui.registry.addMenuItem(recaudioMenuItemName, {\n                icon:  'audioicon',\n                text: recaudioMenuItemNameTitle,\n                onAction: () => handleAction(editor),\n            });\n\n        }\n        // Register the recvideo Toolbar Button.\n        if(isAllowed(editor,'video')) {\n            editor.ui.registry.addButton(recvideoButtonName, {\n                icon: 'videoicon',\n                tooltip: recvideoButtonNameTitle,\n                onAction: () => handleAction(editor),\n            });\n\n            // Add the recvideo Menu Item.\n            // This allows it to be added to a standard menu, or a context menu.\n            editor.ui.registry.addMenuItem(recvideoMenuItemName, {\n                icon: 'videoicon',\n                text: recvideoMenuItemNameTitle,\n                onAction: () => handleAction(editor),\n            });\n        }\n        // Register the recscreen Toolbar Button.\n        if(isAllowed(editor,'screen')) {\n            editor.ui.registry.addButton(recscreenButtonName, {\n                icon: 'screenicon',\n                tooltip: recscreenButtonNameTitle,\n                onAction: () => handleAction(editor),\n            });\n\n            // Add the recscreen Menu Item.\n            // This allows it to be added to a standard menu, or a context menu.\n            editor.ui.registry.addMenuItem(recscreenMenuItemName, {\n                icon: 'screenicon',\n                text: recscreenMenuItemNameTitle,\n                onAction: () => handleAction(editor),\n            });\n        }\n        // Register the widgets Toolbar Button.\n        if(isAllowed(editor,'widgets')) {\n            editor.ui.registry.addButton(widgetsButtonName, {\n                icon: 'widgetsicon',\n                tooltip: widgetsButtonNameTitle,\n                onAction: () => handleAction(editor),\n            });\n\n            // Add the widgets Menu Item.\n            // This allows it to be added to a standard menu, or a context menu.\n            editor.ui.registry.addMenuItem(widgetsMenuItemName, {\n                icon: 'widgetsicon',\n                text: widgetsMenuItemNameTitle,\n                onAction: () => handleAction(editor),\n            });\n\n        }\n    };\n};\n"],"names":["handleAction","editor","window","console","log","async","recaudioButtonNameTitle","recvideoButtonNameTitle","recscreenButtonNameTitle","widgetsButtonNameTitle","recaudioMenuItemNameTitle","recvideoMenuItemNameTitle","recscreenMenuItemNameTitle","widgetsMenuItemNameTitle","audioIcon","videoIcon","screenIcon","widgetsIcon","Promise","all","component","ui","registry","addIcon","html","addButton","recaudioButtonName","icon","tooltip","onAction","rec_audio","display","addMenuItem","recaudioMenuItemName","text","recvideoButtonName","recvideoMenuItemName","recscreenButtonName","recscreenMenuItemName","widgetsButtonName","widgetsMenuItemName"],"mappings":";;;;;;;0JA2CMA,aAAgBC,SAElBC,OAAOC,QAAQC,IAAIH,2BAWCI,gBAEhBC,wBACAC,wBACAC,yBACAC,uBACAC,0BACAC,0BACAC,2BACAC,yBACAC,UACAC,UACAC,WACAC,mBACMC,QAAQC,IAAI,EAClB,mBAAU,kBAAmBC,oBAC7B,mBAAU,kBAAmBA,oBAC7B,mBAAU,mBAAoBA,oBAC9B,mBAAU,iBAAkBA,oBAC5B,mBAAU,oBAAqBA,oBAC/B,mBAAU,oBAAqBA,oBAC/B,mBAAU,qBAAsBA,oBAChC,mBAAU,mBAAoBA,oBAC9B,yBAAe,QAASA,oBACxB,yBAAe,QAASA,oBACxB,yBAAe,SAAUA,oBACzB,yBAAe,UAAWA,4BAGtBnB,SAEJA,OAAOoB,GAAGC,SAASC,QAAQ,YAAaT,UAAUU,MAClDvB,OAAOoB,GAAGC,SAASC,QAAQ,YAAaR,UAAUS,MAClDvB,OAAOoB,GAAGC,SAASC,QAAQ,aAAcP,WAAWQ,MACpDvB,OAAOoB,GAAGC,SAASC,QAAQ,cAAeN,YAAYO,OAGnD,sBAAUvB,OAAO,WAChBA,OAAOoB,GAAGC,SAASG,UAAUC,2BAAoB,CAC7CC,KAAM,YACNC,QAAStB,wBACTuB,SAAU,IAAMC,mBAAUC,QAAQ9B,UAKtCA,OAAOoB,GAAGC,SAASU,YAAYC,6BAAsB,CACjDN,KAAO,YACPO,KAAMxB,0BACNmB,SAAU,IAAM7B,aAAaC,YAKlC,sBAAUA,OAAO,WAChBA,OAAOoB,GAAGC,SAASG,UAAUU,2BAAoB,CAC7CR,KAAM,YACNC,QAASrB,wBACTsB,SAAU,IAAM7B,aAAaC,UAKjCA,OAAOoB,GAAGC,SAASU,YAAYI,6BAAsB,CACjDT,KAAM,YACNO,KAAMvB,0BACNkB,SAAU,IAAM7B,aAAaC,YAIlC,sBAAUA,OAAO,YAChBA,OAAOoB,GAAGC,SAASG,UAAUY,4BAAqB,CAC9CV,KAAM,aACNC,QAASpB,yBACTqB,SAAU,IAAM7B,aAAaC,UAKjCA,OAAOoB,GAAGC,SAASU,YAAYM,8BAAuB,CAClDX,KAAM,aACNO,KAAMtB,2BACNiB,SAAU,IAAM7B,aAAaC,YAIlC,sBAAUA,OAAO,aAChBA,OAAOoB,GAAGC,SAASG,UAAUc,0BAAmB,CAC5CZ,KAAM,cACNC,QAASnB,uBACToB,SAAU,IAAM7B,aAAaC,UAKjCA,OAAOoB,GAAGC,SAASU,YAAYQ,4BAAqB,CAChDb,KAAM,cACNO,KAAMrB,yBACNgB,SAAU,IAAM7B,aAAaC"}