define("tiny_poodll/options",["exports","editor_tiny/options","./common"],(function(_exports,_options,_common){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.register=_exports.isAllowed=_exports.getConfig=void 0;
/**
   * Options helper for the Moodle tiny_poodll plugin.
   *
   * @module      plugintype_pluginname/options
   * @copyright   2023 Justin Hunt <justin@poodll.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const cloudpoodllName=(0,_options.getPluginOptionName)(_common.pluginName,"cloudpoodll"),audioallowedName=(0,_options.getPluginOptionName)(_common.pluginName,"audioallowed"),videoallowedName=(0,_options.getPluginOptionName)(_common.pluginName,"videoallowed"),screenallowedName=(0,_options.getPluginOptionName)(_common.pluginName,"screenallowed"),widgetsallowedName=(0,_options.getPluginOptionName)(_common.pluginName,"widgetsallowed");_exports.register=editor=>{const registerOption=editor.options.register;registerOption(cloudpoodllName,{processor:"object"}),registerOption(audioallowedName,{processor:"boolean",default:!1}),registerOption(videoallowedName,{processor:"boolean",default:!1}),registerOption(screenallowedName,{processor:"boolean",default:!1}),registerOption(widgetsallowedName,{processor:"boolean",default:!1})};_exports.getConfig=editor=>editor.options.get(cloudpoodllName);_exports.isAllowed=function(editor,rec_type){switch(rec_type){case"audio":return editor.options.get(audioallowedName);case"video":return editor.options.get(videoallowedName);case"screen":return editor.options.get(screenallowedName);case"widgets":return editor.options.get(widgetsallowedName);default:return!1}}}));

//# sourceMappingURL=options.min.js.map