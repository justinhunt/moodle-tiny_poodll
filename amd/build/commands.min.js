define("tiny_poodll/commands",["exports","editor_tiny/utils","core/str","./common","./options","./rec_audio"],(function(_exports,_utils,_str,_common,_options,_rec_audio){var obj;
/**
   * Commands helper for the Moodle tiny_poodll plugin.
   *
   * @module      plugintype_pluginname/commands
   * @copyright   2023 Justin Hunt <justin@poodll.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0,_rec_audio=(obj=_rec_audio)&&obj.__esModule?obj:{default:obj};const handleAction=editor=>{window.console.log(editor)};_exports.getSetup=async()=>{const[recaudioButtonNameTitle,recvideoButtonNameTitle,recscreenButtonNameTitle,widgetsButtonNameTitle,recaudioMenuItemNameTitle,recvideoMenuItemNameTitle,recscreenMenuItemNameTitle,widgetsMenuItemNameTitle,audioIcon,videoIcon,screenIcon,widgetsIcon]=await Promise.all([(0,_str.get_string)("button_recaudio",_common.component),(0,_str.get_string)("button_recvideo",_common.component),(0,_str.get_string)("button_recscreen",_common.component),(0,_str.get_string)("button_widgets",_common.component),(0,_str.get_string)("menuitem_recaudio",_common.component),(0,_str.get_string)("menuitem_recvideo",_common.component),(0,_str.get_string)("menuitem_recscreen",_common.component),(0,_str.get_string)("menuitem_widgets",_common.component),(0,_utils.getButtonImage)("audio",_common.component),(0,_utils.getButtonImage)("video",_common.component),(0,_utils.getButtonImage)("screen",_common.component),(0,_utils.getButtonImage)("widgets",_common.component)]);return editor=>{editor.ui.registry.addIcon("audioicon",audioIcon.html),editor.ui.registry.addIcon("videoicon",videoIcon.html),editor.ui.registry.addIcon("screenicon",screenIcon.html),editor.ui.registry.addIcon("widgetsicon",widgetsIcon.html),(0,_options.isAllowed)(editor,"audio")&&(editor.ui.registry.addButton(_common.recaudioButtonName,{icon:"audioicon",tooltip:recaudioButtonNameTitle,onAction:()=>_rec_audio.default.display(editor)}),editor.ui.registry.addMenuItem(_common.recaudioMenuItemName,{icon:"audioicon",text:recaudioMenuItemNameTitle,onAction:()=>handleAction(editor)})),(0,_options.isAllowed)(editor,"video")&&(editor.ui.registry.addButton(_common.recvideoButtonName,{icon:"videoicon",tooltip:recvideoButtonNameTitle,onAction:()=>handleAction(editor)}),editor.ui.registry.addMenuItem(_common.recvideoMenuItemName,{icon:"videoicon",text:recvideoMenuItemNameTitle,onAction:()=>handleAction(editor)})),(0,_options.isAllowed)(editor,"screen")&&(editor.ui.registry.addButton(_common.recscreenButtonName,{icon:"screenicon",tooltip:recscreenButtonNameTitle,onAction:()=>handleAction(editor)}),editor.ui.registry.addMenuItem(_common.recscreenMenuItemName,{icon:"screenicon",text:recscreenMenuItemNameTitle,onAction:()=>handleAction(editor)})),(0,_options.isAllowed)(editor,"widgets")&&(editor.ui.registry.addButton(_common.widgetsButtonName,{icon:"widgetsicon",tooltip:widgetsButtonNameTitle,onAction:()=>handleAction(editor)}),editor.ui.registry.addMenuItem(_common.widgetsMenuItemName,{icon:"widgetsicon",text:widgetsMenuItemNameTitle,onAction:()=>handleAction(editor)}))}}}));

//# sourceMappingURL=commands.min.js.map