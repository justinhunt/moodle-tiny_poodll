define("tiny_poodll/video_recorder",["exports","./base_recorder","./common","core/templates","core/log"],(function(_exports,_base_recorder,_common,Templates,_log){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Tiny Poodll - audio recorder configuration.
   *
   * @module      tiny_poodll/audio_recorder
   * @copyright   2023 Justin Hunt <justin@poodll.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_base_recorder=_interopRequireDefault(_base_recorder),Templates=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Templates),_log=_interopRequireDefault(_log);class Video extends _base_recorder.default{static fetchRecorderDimensions(config){var sizes={};switch(config.videoskin){case _common.SKIN.ONETWOTHREE:sizes.videowidth=441,sizes.videoheight=540;break;case _common.SKIN.BMR:sizes.videowidth=441,sizes.videoheight=500;break;default:sizes.videowidth=441,sizes.videoheight=450}return sizes}static getModalContext(editor){var tc=super.getModalContext(editor);return tc.isvideo=!0,tc.recorder="video",tc.subtitlevideobydefault?tc.subtitling=!0:tc.subtitling=!1,tc}fetchMediaTags(mediaurl,mediafilename,sourceurl,sourcemimetype){var context={};return context.url=mediaurl,context.name=mediafilename,context.issubtitling=this.config.subtitling&&"0"!==this.config.subtitling,context.includesourcetrack=this.config.transcoding&&mediaurl!==sourceurl&&"wav"!==sourceurl.slice(-3)&&!1!==sourceurl,context.CP=this.config.CP,context.subtitleurl=mediaurl+".vtt",context.sourceurl=sourceurl,context.sourcemimetype=sourcemimetype,context.poster=!1,this.config.transcoding?context.urlmimetype="video/mp4":context.urlmimetype=sourcemimetype,Templates.renderForPromise("tiny_poodll/videoplayer",context)}}return _exports.default=Video,_exports.default}));

//# sourceMappingURL=video_recorder.min.js.map